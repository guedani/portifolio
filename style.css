@import url('https://fonts.googleapis.com/css2?family=Baloo+Da+2:wght@400;500;600;700&family=Josefin+Slab:ital,wght@0,300;0,600;0,700;1,300;1,400;1,600&family=Mulish:ital,wght@0,200;0,300;0,400;0,500;1,200;1,300;1,400&display=swap');
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css');

* {
  margin: 0;
  padding: 0;
  list-style: none; /*Todos elementos com bullets perdem os bullets*/
  text-decoration: none; /*Tira sublinhado dos links*/
}

:root{ /*Usado para criar variáveis, neste caso de fontes, para se precisar alterá-las mudar somente em um lugar*/
  --font-primary: "Baloo Da 2", serif;
  --font-secundary: "Josefin Slab", serif;
  --font-action: "Mulish", serif;
}

.hamburguer{
  /* background-color: red; */
  width: 2rem;
  height: 2rem;
  position: fixed; /* A posição sempre será fixa no canto da tela*/
  z-index: 100; /*Determina quem irá se sobrepor*/
  right: 2rem;
  top: 2rem;
  display: flex; /*Definiu que o elemento hamburguer será um displar*/
  flex-direction: column; /*Definiu que a organização dentro do display será de coluna*/
  justify-content: space-evenly;
  cursor: pointer;
  /* transition: all 1s; */
}

.show-menu .hamburguer{
  right: 16rem;
}

.line{
  width: 100%; /*Todos elementos da classe line terão o mesmo tamanho da classe pai(.hamburguer) */
  height: 0.1rem;
  background-color: #fff;
  box-shadow: 0.1rem 0.1rem 1px #000;
  transition: transform 1s;
}

.show-menu #line1{
  transform: rotate(45deg) translate(.2rem, .60rem);
}

.show-menu #line2{
  opacity: 0;
  visibility: hidden;
}

.show-menu #line3{
  transform: rotate(-45deg) translate(-.2rem, -.60rem);
}

.hamburguer span{
  position: absolute;
  left: 3rem;
  height: 2rem;
  width: 6rem;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #a044ff;
  font-family: var(--font-action);
  color: #fff;
  opacity: 0;
  /* transition: all 1s; */
}

.hamburguer span::before{
  content: "";
  position: absolute;
  border-right: 0.5rem solid #a044ff;
  border-top: 0.5rem solid transparent;
  border-left: 0.5rem solid transparent;
  border-bottom: 0.5rem solid transparent;
  left: -1rem;
}

.show-menu .hamburguer:hover span{
  opacity: 1;
}

header {
  width: 100%;
  height: 100vh;
  /*vh é uma unidade de medida baseada no tamanho da vsualização do usuário (view height), sendo 100vh todo o tamanho de exibição da tela do dispositivo*/
  overflow: hidden;
  /*Desabilita a possibilidade do cabeçalho ultrapassar o limite da janela para não ter a barra de rolagem vertical*/
  position: relative;
  /*posicionamento definido pra usar com o posicionameto da classe banner*/
}

.img-wrapper {
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  /*rgba(red, green, blue e alpha) há a possibilidade de definir transparencia*/
}

.img-wrapper img {
  /* desta forma podemos selecionar todas as imgs que estão dentro dessa div forçando-as seguir esses estilos*/
  width: 100%;
  height: 100%;
  object-fit: cover;  /*Pelo fato da foto estar dentro de uma div(envelopamento) por isso através do object-flit definimos que a imagem irá cortar ou esticar a img de acordo com a tela sempre mantendo a proporção*/
  opacity: 0.5;  /*Muda a opacidade da imagem(mostrar mais o fundo)*/
  animation: zoom 25s;
}

@keyframes zoom { /*Para fazer animações no css é necessário usar frames chaves, onde você defini como o elemento será no começo(0%) e como será no final(100%) e o software irá calcaular o resultado disso*/
  0%{ /*Foi definido que no início da animações irá aumentar a escala da img(zoom) 30% maior */
    transform: scale(1.3);
  }
  100%{ /*Foi definido que no fim da animações irá retornar ao seu tamanho normal(escala em 1) */
    transform: scale(1);
  }
}

.banner {
  position: absolute;
  /*muda de posicionamento estático(padrão) e muda pra absoluto, no entanto é preciso estar dentro de um elemento com posicionamento relativo*/
  top: 30%;
  left: 15%;
}

.banner h1 {
  color: #ffffff;
  font-size: 3.5rem;
  /*o rem é uma unidade que busca como referencia o elemento pricipal para poder definir seu tamanho sendo altamente benefico no quesito acessibilidade*/
  font-family: var(--font-primary);
  font-weight: 200;  /*Aumenta ou diminui o negrito da fonte*/
  text-shadow: 0.3rem 0.4rem 2px rgba(0, 0, 0, 0.4);
  line-height: 3.5rem;
  margin-bottom: 2rem; /*Defini a marge inferior do h1*/
  animation: moveBanner 1s 0.5s forwards;
  opacity: 0; /*O elemento começa com a opacidade 0, para na animação ganhar a opacidade na hora certa*/
}

.banner p{
  font-family: var(--font-secundary);
  color: #fff;
  font-size: 2rem;
  text-shadow: 0.2rem 0.2rem rgba(0, 0, 0, 0.4);
  margin-bottom: 2rem;
  animation: moveBanner 1s 0.7s forwards;
  opacity: 0;
}

.banner button{
  font-family: var(--font-action);
  color: #fff;
  text-transform: uppercase; /*Deixa todas as letras em maiúsculo*/
  letter-spacing: 0.1rem; /*Espaçamento entre as letras*/
  background: #6a3093; /*Usado o site "uigradients.com"*/
  background: -webkit-linear-gradient(to right, #6a3093, #a044ff); /*Usado o site "uigradients.com"*/
  background: linear-gradient(to left, #6a3093, #a044ff); /*Usado o site "uigradients.com"*/
  padding: 1rem 3rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  animation: moveBanner 1s 0.9s forwards;
  opacity: 0;
}

.banner button:hover{ /*hover serve para identificar uma ação no botão dentro da class banner*/
  /*Futuros testes**/
  /* TODO: Buscar animações criativas para este botão */
}

@keyframes moveBanner {
  0%{
    transform: translateY(10rem) rotatey(-30deg);
  }
  100%{
    transform: translateY(0) rotatey(0);
    opacity: 1;
  }
}

.sidebar{ /* Conteúdo interno do menu lateral*/
  width: 20rem;
  height: 100vh; /*Defini que a altura será do mesmo tamanho que a tela do dispositivo*/
  background-color: #fff;
  position: fixed;
  top: 0; /*Garante que o sidebar sempre esteja em cima, independente do dispositivo*/
  right: -20rem; /*Enquanto o sidebar não tiver a classe show-menu ele fica fora da tela*/
  transition: all 1s;
}

.show-menu .sidebar{
  right: 0; /*Quando o JS adicioina a classe show-menu, o sidebar é colocado na posição correta*/
}


.menu {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.menu-item{
  text-align: center;
  margin-bottom: 0.5rem;
}

.menu-link{
  font-family: var(--font-action);
  font-size: 2rem;
  color: #555;
  transition: color 0.7s;
}

.menu-link:hover{
  color: #6a3093;
}

.social-media{
  position: absolute;
  bottom: 2rem;
  width: 100%;
  display: flex;
  justify-content: space-evenly;
}

.social-media i{
  background-color: #6a3093;
  color: rgba(255, 255, 255, 1);
  height: 2.5rem;
  width: 2.5rem;
  font-size: 1.5rem;
  display: flex;
  justify-content: center; /*Alinha os itens na horizontal*/
  align-items: center; /*Alinha os itens na vertical*/
  border-radius: 50%;
  transition: background-color 1s;
}

.social-media i:hover{
background-color: #a044ff;
}
